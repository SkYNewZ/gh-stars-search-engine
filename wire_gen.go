// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"log/slog"
	"time"

	"github.com/SkYNewZ/gh-stars-search-engine/internal/logging"
	"github.com/SkYNewZ/gh-stars-search-engine/internal/slogx"
	"github.com/robfig/cron/v3"
)

// Injectors from wire.go:

// setupScheduler is used by wire to inject the scheduler.
func setupScheduler(location string, logger *slog.Logger) (*cron.Cron, error) {
	timeLocation, err := provideSchedulerLocation(location)
	if err != nil {
		return nil, err
	}
	v := provideSchedulerOptions(timeLocation, logger)
	cronCron := cron.New(v...)
	return cronCron, nil
}

func provideSchedulerLocation(location string) (*time.Location, error) {
	timeLocation, err := time.LoadLocation(location)
	if err != nil {
		return nil, err
	}
	return timeLocation, nil
}

// wire.go:

func provideSchedulerOptions(loc *time.Location, logger *slog.Logger) []cron.Option {
	schedulerLogger := logger.With(slogx.Component("scheduler"))
	return []cron.Option{cron.WithLocation(loc), cron.WithLogger(logging.NewLoggerScheduler(schedulerLogger))}
}
